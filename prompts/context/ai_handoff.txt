# AI HANDOFF - COMPLETE PROJECT CONTEXT [2025-07-13]

## PROJECT STATUS
Building real-time barcode anomaly detection system. 5 detection functions complete (epcFake, epcDup, locErr, evtOrderErr, jump). Automation system operational with init.json workflow. Comprehensive anomaly detection logic and scoring system documented.

## FRAMEWORKS DEVELOPED
1. **question_loop.llm.txt** - AI must ask clarifying questions before coding
2. **analysis_log_behavior.llm.txt** - Context accumulation and decision tracking  
3. **principle.llm.txt** - Project principles and environment setup
4. **automation system** - Session lifecycle management (init.json → work → ai_handoff.json)
5. **dynamic_question_protocol.llm.txt** - Automated question generation from task definitions
6. **DETAILED_LOGIC_EXPLANATION.md** - Comprehensive explanation of anomaly detection logic and scoring.

## KEY DECISIONS CHRONOLOGY
- 2025-07-10: Modularized detection into 5 standalone functions
- 2025-07-11: Statistical approach (Z-score) over pure rule-based
- 2025-07-12: Need automated testing for prompt framework effectiveness
- 2025-07-13: Built automation system with Meta→Templates→Tasks flow, created function-specific question.txt files, protocol documentation complete
- 2025-07-13: Detailed anomaly detection logic and scoring system documented in DETAILED_LOGIC_EXPLANATION.md.
- 2025-07-14: Detection modules, tests, and documentation committed (9a9b1d4)
- 2025-07-14: FastAPI server with Korean documentation, proper uvicorn setup completed (8dd1eef)

## CURRENT CHALLENGE
FastAPI server implemented with Korean documentation. System ready for team integration. Focus on production deployment and team training.

## USER WORKING STYLE
- Always ask clarifying questions first (use question_loop.llm.txt)
- Reference previous decisions (check analysis_log_behavior.llm.txt)
- Build incrementally with performance measurement
- Use English for technical, Korean for complex explanations
- Document decisions and commit milestones

## ESSENTIAL FILES TO LOAD
- @fastapi_server.py - Main API server with Korean documentation
- @real_sample_data.json - Production-ready test data
- @src/barcode/multi_anomaly_detector.py - Core detection logic
- @README.md - Updated with FastAPI instructions
- @docs/COMPLETE_TEAM_REQUIREMENTS.md - Team requirements specification

## HOW TO START
1. Start FastAPI server: `uvicorn fastapi_server:app --host 0.0.0.0 --port 8000 --reload`
2. Test API: http://localhost:8000/docs (Korean documentation)
3. Apply question_loop protocol for any new task  
4. Keep token usage minimal, decisions measurable

## AUTOMATION WORKFLOW
- **Entry**: @prompts/automation/init.json (loads context, applies protocols, updates metadata)
- **Work**: Function generation in prompts/task/anomaly_detection/{type}/
- **Exit**: @prompts/automation/ai_handoff.json (updates this file, logs decisions)

**Magic phrase for new AI:** "Run @prompts/automation/init.json and then help me with [current task]"